cd /etc
vi my.cnf


================================================= centos7 安装 mysql ============================================
在CentOS中默认安装有MariaDB，这个是MySQL的分支，但为了需要，还是要在系统中安装MySQL，而且安装完成之后可以直接覆盖掉MariaDB。

1 下载并安装MySQL官方的 Yum Repository
wget -i -c http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm
使用上面的命令就直接下载了安装用的Yum Repository，大概25KB的样子，然后就可以直接yum安装了。

yum -y install mysql57-community-release-el7-10.noarch.rpm
之后就开始安装MySQL服务器。

yum -y install mysql-community-server
这步可能会花些时间，安装完成后就会覆盖掉之前的mariadb。
至此MySQL就安装完成了，然后是对MySQL的一些设置。

2 MySQL数据库设置
 首先启动MySQL

systemctl start  mysqld.service
查看MySQL运行状态，运行状态如图：

systemctl status mysqld.service
 此时MySQL已经开始正常运行，不过要想进入MySQL还得先找出此时root用户的密码，通过如下命令可以在日志文件中找出密码：

grep "password" /var/log/mysqld.log

如下命令进入数据库：

mysql -uroot -p
输入初始密码（是上面图片最后面的 no;e!5>>alfg），此时不能做任何事情，因为MySQL默认必须修改密码之后才能操作数据库：

ALTER USER 'root'@'localhost' IDENTIFIED BY 'new password';
其中‘new password’替换成你要设置的密码，注意:密码设置必须要大小写字母数字和特殊符号（,/';:等）,不然不能配置成功

如果要修改为root这样的弱密码，需要进行以下配置：

查看密码策略

show variables like '%password%';

 修改密码策略
vi /etc/my.cnf
添加validate_password_policy配置

选择0（LOW），1（MEDIUM），2（STRONG）其中一种，选择2需要提供密码字典文件

#添加validate_password_policy配置
validate_password_policy=0
#关闭密码策略
validate_password = off
重启mysql服务使配置生效

systemctl restart mysqld
然后就可以修改为弱密码啦

3 开启mysql的远程访问
执行以下命令开启远程访问限制（注意：下面命令开启的IP是 192.168.0.1，如要开启所有的，用%代替IP）：

grant all privileges on *.* to 'root'@'192.168.0.1' identified by 'password' with grant option;
然后再输入下面两行命令

flush privileges; 
exit; 

4 为firewalld添加开放端口
添加mysql端口3306

firewall-cmd --zone=public --add-port=3306/tcp --permanent
然后再重新载入

firewall-cmd --reload

5 修改mysql的字符编码（不修改会产生中文乱码问题）
显示原来编码：

show variables like '%character%';


修改/etc/my.cnf

[mysqld]
character_set_server=utf8
init_connect='SET NAMES utf8'



========================================================================= my.cnf ===============================================

# For advice on how to change settings please see
# http://dev.mysql.com/doc/refman/5.7/en/server-configuration-defaults.html

[mysqld]
# For advice on how to change settings please see
# http://dev.mysql.com/doc/refman/5.7/en/server-configuration-defaults.html

[mysqld]
#
# Remove leading # and set to the amount of RAM for the most important data
# cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.
# innodb_buffer_pool_size = 128M
#
# Remove leading # to turn on a very important data integrity option: logging
# changes to the binary log between backups.
# log_bin
#
# Remove leading # to set options mainly useful for reporting servers.
# The server defaults are faster for transactions and fast SELECTs.
# Adjust sizes as needed, experiment to find the optimal values.
# join_buffer_size = 128M
# sort_buffer_size = 2M
# read_rnd_buffer_size = 2M
datadir=/var/lib/mysql
socket=/var/lib/mysql/mysql.sock

# Disabling symbolic-links is recommended to prevent assorted security risks
symbolic-links=0

log-error=/var/log/mysqld.log
pid-file=/var/run/mysqld/mysqld.pid

#添加validate_password_policy配置
validate_password_policy=0
#关闭密码策略
validate_password = off
